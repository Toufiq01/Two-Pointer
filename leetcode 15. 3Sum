class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> result = new ArrayList<>();
        for(int i = 0 ; i< nums.length; i++ ){
            if( i>0 && nums[i] == nums[i-1]) continue;
            int j = i+1, k = nums.length -1;
            int target = -nums[i];
            while(j<k){
                if(nums[j]+ nums[k] == target){
                    result.add(Arrays.asList(nums[i] , nums[j++] , nums[k--]));
                    while(j<k && nums[j] == nums[j-1]) j++;
                    while(j<k && nums[k] == nums[k+1]) k--;
                }else if(nums[j]+ nums[k] > target) k--;
                else j++;
            }
        }
        return result;
    }
}
//Runtime: 17 ms, faster than 92.46% of Java online submissions for 3Sum.
//Memory Usage: 42.9 MB, less than 65.03% of Java online submissions for 3Sum.
